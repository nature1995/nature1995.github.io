<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Centos7服务器安装Anaconda</title>
      <link href="/2018/12/07/Centos7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Anaconda/"/>
      <url>/2018/12/07/Centos7%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E8%A3%85Anaconda/</url>
      
        <content type="html"><![CDATA[<h1 id="Anaconda3下载"><a href="#Anaconda3下载" class="headerlink" title="Anaconda3下载"></a>Anaconda3下载</h1><p>从Anaconda官网下载linux版本：<a href="https://www.anaconda.com/download/#linux" target="_blank" rel="noopener">https://www.anaconda.com/download/#linux</a></p><h1 id="Anaconda3安装"><a href="#Anaconda3安装" class="headerlink" title="Anaconda3安装"></a>Anaconda3安装</h1><p>将下载好的文件Anaconda3-5.0.1-Linux-x86_64.sh执行如下命令：<br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">bash</span> <span class="selector-tag">Anaconda3-5</span><span class="selector-class">.0</span><span class="selector-class">.1-Linux-x86_64</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure><p></p><a id="more"></a><p>安装过程中修改Anaconda3的安装路径为/opt/modules/anaconda3:<br></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Do</span> you <span class="keyword">accept</span> the license terms? [yes|no]</span><br><span class="line">Please answer <span class="symbol">'yes</span>' <span class="keyword">or</span> <span class="symbol">'no</span><span class="string">':'</span></span><br><span class="line">&gt;&gt;&gt; yes  </span><br><span class="line"></span><br><span class="line">Anaconda3 will now be installed into this location:</span><br><span class="line">/root/anaconda3</span><br><span class="line"></span><br><span class="line">  - Press ENTER to confirm the location</span><br><span class="line">  - Press CTRL-C to <span class="keyword">abort</span> the installation</span><br><span class="line">  - <span class="keyword">Or</span> specify a different location below</span><br><span class="line"></span><br><span class="line">[/root/anaconda3] &gt;&gt;&gt; /opt/modules/anaconda3</span><br><span class="line">PREFIX=/opt/modules/anaconda3</span><br></pre></td></tr></table></figure><p></p><p>等待安装完成提示信息，询问是否要将Anaconda3添加到PATH环境变量中，直接回车(选择no):<br></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">installation finished.</span><br><span class="line"><span class="keyword">Do</span> you wish the installer <span class="keyword">to</span> prepend the Anaconda3 <span class="keyword">install</span> location</span><br><span class="line"><span class="keyword">to</span> <span class="keyword">PATH</span> <span class="keyword">in</span> your /root/.bashrc ? [yes|<span class="keyword">no</span>]</span><br><span class="line">[<span class="keyword">no</span>] &gt;&gt;&gt; </span><br><span class="line"></span><br><span class="line">You may wish <span class="keyword">to</span> edit your .bashrc <span class="keyword">to</span> prepend the Anaconda3 <span class="keyword">install</span> location <span class="keyword">to</span> <span class="keyword">PATH</span>:</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">PATH</span>=/opt/modules/anaconda3/<span class="keyword">bin</span>:$<span class="keyword">PATH</span></span><br><span class="line"></span><br><span class="line">Thank you <span class="keyword">for</span> installing Anaconda3!</span><br></pre></td></tr></table></figure><p></p><p>手动将export PATH=/opt/modules/anaconda3/bin:$PATH添加到/etc/profile中, 最后source /etc/profile使环境变量生效:<br></p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure><p></p><h1 id="Tensorflow安装"><a href="#Tensorflow安装" class="headerlink" title="Tensorflow安装"></a>Tensorflow安装</h1><p>建立Tensorflow运行环境<br>Tensorflow目前Python3版本最高支持到Python3.5，所以选择Python 3.5, 只需要执行conda create -n tensorflow python=3.5指令:<br></p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">## Python 2.7</span></span><br><span class="line"><span class="meta"># conda create -n tensorflow python=2.7  </span></span><br><span class="line"></span><br><span class="line"><span class="meta">## Python 3.5 </span></span><br><span class="line"><span class="meta"># conda create -n tensorflow python=3.5 </span></span><br><span class="line"></span><br><span class="line"><span class="meta">## Python 3.6 </span></span><br><span class="line"><span class="meta"># conda create -n tensorflow python=3.6</span></span><br></pre></td></tr></table></figure><p></p><p>在Anaconda3中创建Tensorflow虚拟环境:<br></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Fetching package metadata ...........</span><br><span class="line">Solving package specifications: .</span><br><span class="line"></span><br><span class="line">Package plan for installation <span class="keyword">in</span> environment /opt/modules/anaconda3/envs/tensorflow:</span><br><span class="line"></span><br><span class="line">The following NEW packages will be INSTALLED:</span><br><span class="line"></span><br><span class="line">    ca-certificates: <span class="number">2017.08</span><span class="number">.26</span>-h1d4fec5_0   </span><br><span class="line">    certifi:         <span class="number">2017.11</span><span class="number">.5</span>-py35h9749603_0</span><br><span class="line">    libedit:         <span class="number">3.1</span>-heed3624_0          </span><br><span class="line">    libffi:          <span class="number">3.2</span><span class="number">.1</span>-hd88cf55_4        </span><br><span class="line">    libgcc-ng:       <span class="number">7.2</span><span class="number">.0</span>-h7cc24e2_2        </span><br><span class="line">    libstdcxx-ng:    <span class="number">7.2</span><span class="number">.0</span>-h7a57d05_2        </span><br><span class="line">    ncurses:         <span class="number">6.0</span>-h9df7e31_2          </span><br><span class="line">    openssl:         <span class="number">1.0</span><span class="number">.2</span>m-h26d622b_1       </span><br><span class="line">    pip:             <span class="number">9.0</span><span class="number">.1</span>-py35h7e7da9d_4    </span><br><span class="line">    python:          <span class="number">3.5</span><span class="number">.4</span>-h417fded_24       </span><br><span class="line">    readline:        <span class="number">7.0</span>-ha6073c6_4          </span><br><span class="line">    setuptools:      <span class="number">36.5</span><span class="number">.0</span>-py35ha8c1747_0   </span><br><span class="line">    sqlite:          <span class="number">3.20</span><span class="number">.1</span>-hb898158_2       </span><br><span class="line">    tk:              <span class="number">8.6</span><span class="number">.7</span>-hc745277_3        </span><br><span class="line">    wheel:           <span class="number">0.30</span><span class="number">.0</span>-py35hd3883cf_1   </span><br><span class="line">    xz:              <span class="number">5.2</span><span class="number">.3</span>-h55aa19d_2        </span><br><span class="line">    zlib:            <span class="number">1.2</span><span class="number">.11</span>-ha838bed_2       </span><br><span class="line"></span><br><span class="line">Proceed ([y]/n)? </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libffi<span class="number">-3.2</span><span class="number">.1</span>-h <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">137.60</span> kB/s</span><br><span class="line">ncurses<span class="number">-6.0</span>-h9 <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">01</span> <span class="number">622.10</span> kB/s</span><br><span class="line">openssl<span class="number">-1.0</span><span class="number">.2</span>m <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">03</span>   <span class="number">1.06</span> MB/s</span><br><span class="line">tk<span class="number">-8.6</span><span class="number">.7</span>-hc745 <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">02</span>   <span class="number">1.13</span> MB/s</span><br><span class="line">xz<span class="number">-5.2</span><span class="number">.3</span>-h55aa <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">1.28</span> MB/s</span><br><span class="line">zlib<span class="number">-1.2</span><span class="number">.11</span>-ha <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">1.59</span> MB/s</span><br><span class="line">readline<span class="number">-7.0</span>-h <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">1.27</span> MB/s</span><br><span class="line">sqlite<span class="number">-3.20</span><span class="number">.1</span>- <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">01</span>   <span class="number">1.41</span> MB/s</span><br><span class="line">python<span class="number">-3.5</span><span class="number">.4</span>-h <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">07</span>   <span class="number">3.87</span> MB/s</span><br><span class="line">certifi<span class="number">-2017.1</span> <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">6.01</span> MB/s</span><br><span class="line">setuptools<span class="number">-36.</span> <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">6.55</span> MB/s</span><br><span class="line">wheel<span class="number">-0.30</span><span class="number">.0</span>-p <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">6.82</span> MB/s</span><br><span class="line">pip<span class="number">-9.0</span><span class="number">.1</span>-py35 <span class="number">100</span>% |##################################################################| Time: <span class="number">0</span>:<span class="number">00</span>:<span class="number">00</span>   <span class="number">6.78</span> MB/s</span><br><span class="line">#</span><br><span class="line"># To activate this environment, use:</span><br><span class="line"># &gt; source activate tensorflow</span><br><span class="line">#</span><br><span class="line"># To deactivate an active environment, use:</span><br><span class="line"># &gt; source deactivate</span><br><span class="line">#</span><br></pre></td></tr></table></figure><p></p><p>为了简便也可以直接指定版本python=3.5, 且克隆anaconda所有的Python包:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n tensorflow <span class="attribute">python</span>=3.5 anaconda</span><br></pre></td></tr></table></figure><h1 id="conda环境管理"><a href="#conda环境管理" class="headerlink" title="conda环境管理"></a>conda环境管理</h1><h2 id="列出所有的环境"><a href="#列出所有的环境" class="headerlink" title="列出所有的环境"></a>列出所有的环境</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">conda</span> <span class="literal">info</span> --envs</span><br></pre></td></tr></table></figure><h2 id="创建一个指定Python版本且包含anaconda所有Python包的新环境"><a href="#创建一个指定Python版本且包含anaconda所有Python包的新环境" class="headerlink" title="创建一个指定Python版本且包含anaconda所有Python包的新环境"></a>创建一个指定Python版本且包含anaconda所有Python包的新环境</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># conda create -n py36 python=3.6 anaconda</span></span><br></pre></td></tr></table></figure><h2 id="克隆一个环境"><a href="#克隆一个环境" class="headerlink" title="克隆一个环境"></a>克隆一个环境</h2><p>创建一个和root环境一样的副本:<br></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n py36 --<span class="keyword">clone</span> <span class="title">root</span></span><br></pre></td></tr></table></figure><p></p><h2 id="删除一个环境"><a href="#删除一个环境" class="headerlink" title="删除一个环境"></a>删除一个环境</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># conda <span class="built_in">remove</span> -n py36 <span class="comment">--all</span></span><br></pre></td></tr></table></figure><p>在conda环境下安装tensorflow（pip安装方式）<br>激活conda环境(tensorflow)<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">source</span> activate tensorflow</span></span><br></pre></td></tr></table></figure><p></p><h2 id="根据tensorflow的版本设置环境变量（以CPU版本为例）"><a href="#根据tensorflow的版本设置环境变量（以CPU版本为例）" class="headerlink" title="根据tensorflow的版本设置环境变量（以CPU版本为例）"></a>根据tensorflow的版本设置环境变量（以CPU版本为例）</h2><p>Tensorflow的源码地址: <a href="https://github.com/tensorflow/tensorflow，如下三种环境Python2.7" target="_blank" rel="noopener">https://github.com/tensorflow/tensorflow，如下三种环境Python2.7</a>, Python3.4, Python3.5，选择一种(Python3.5)运行:<br></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Linux 64-bit, CPU only, Python 2.7 </span></span><br><span class="line">(tensorflow)$ export TF_BINARY_URL=https:<span class="regexp">//</span>ci.tensorflow.org<span class="regexp">/view/</span>tf-nightly<span class="regexp">/job/</span>tf-nightly-linux<span class="regexp">/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/</span>lastSuccessfulBuild<span class="regexp">/artifact/</span>pip_test<span class="regexp">/whl/</span>tf_nightly-<span class="number">1</span>.head-cp27-none-linux_x86_64.whl </span><br><span class="line"><span class="comment">## Linux 64-bit, CPU only, Python 3.4 </span></span><br><span class="line">(tensorflow)$ export TF_BINARY_URL=https:<span class="regexp">//</span>ci.tensorflow.org<span class="regexp">/view/</span>tf-nightly<span class="regexp">/job/</span>tf-nightly-linux<span class="regexp">/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/</span>lastSuccessfulBuild<span class="regexp">/artifact/</span>pip_test<span class="regexp">/whl/</span>tf_nightly-<span class="number">1</span>.head-cp34-cp34m-linux_x86_64.whl</span><br><span class="line"><span class="comment">## Linux 64-bit, CPU only, Python 3.5 </span></span><br><span class="line">(tensorflow)$ export TF_BINARY_URL=https:<span class="regexp">//</span>ci.tensorflow.org<span class="regexp">/view/</span>tf-nightly<span class="regexp">/job/</span>tf-nightly-linux<span class="regexp">/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3.5,label=cpu-slave/</span>lastSuccessfulBuild<span class="regexp">/artifact/</span>pip_test<span class="regexp">/whl/</span>tf_nightly-<span class="number">1</span>.head-cp35-cp35m-linux_x86_64.whl</span><br></pre></td></tr></table></figure><p></p><h2 id="使用pip命令安装tensorflow"><a href="#使用pip命令安装tensorflow" class="headerlink" title="使用pip命令安装tensorflow"></a>使用pip命令安装tensorflow</h2><p>选择一种安装环境(Python 3):<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Python 2 </span></span></span><br><span class="line"><span class="meta">(tensorflow)#</span><span class="bash"> pip install --ignore-installed --upgrade <span class="variable">$TF_BINARY_URL</span> </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># Python 3 </span></span></span><br><span class="line"><span class="meta">(tensorflow)#</span><span class="bash"> pip install --ignore-installed --upgrade <span class="variable">$TF_BINARY_URL</span></span></span><br></pre></td></tr></table></figure><p></p><h2 id="使用conda命令安装tensorflow"><a href="#使用conda命令安装tensorflow" class="headerlink" title="使用conda命令安装tensorflow"></a>使用conda命令安装tensorflow</h2><p>Using conda参照如下网址:<br>A community maintained conda package is available from conda-forge.<br><a href="https://github.com/conda-forge/tensorflow-feedstock" target="_blank" rel="noopener">https://github.com/conda-forge/tensorflow-feedstock</a></p><p>Only the CPU version of TensorFlow is available at the moment and can be installed in the conda environment for Python 2 or Python 3.<br></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> activate tensorflow </span></span><br><span class="line"><span class="meta">(tensorflow)#</span><span class="bash"></span></span><br></pre></td></tr></table></figure><p></p><p>Linux/Mac OS X, Python 2.7/3.4/3.5, CPU only:<br></p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">tensorflow</span>)# conda install -c conda-forge tensorflow</span><br></pre></td></tr></table></figure><p></p><p>参考资料<br>【1】<a href="https://blog.csdn.net/liuguangrong/article/details/78737419" target="_blank" rel="noopener">https://blog.csdn.net/liuguangrong/article/details/78737419</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Centos更新源yum问题解决方法</title>
      <link href="/2018/12/05/Centos%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85yum%E7%9A%84base-repo%E6%BA%90/"/>
      <url>/2018/12/05/Centos%E9%87%8D%E6%96%B0%E5%AE%89%E8%A3%85yum%E7%9A%84base-repo%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<p>好久不更新自己的服务器或者误删除了更新源，偶然返现自己的Centos的系统yum源出现问题了，如何才能修复？</p><h3 id="方式一：使用国内的阿里云镜像"><a href="#方式一：使用国内的阿里云镜像" class="headerlink" title="方式一：使用国内的阿里云镜像"></a>方式一：使用国内的阿里云镜像</h3><p>（1）把/etc/yum.repos.d/下面所有的源给删除掉了</p><p>（2）选择自己系统合适的镜像下载<br></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># CentOS 5</span></span><br><span class="line">wget -O <span class="meta-keyword">/etc/</span>yum.repos.d/CentOS-Base.repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-5.repo</span></span><br><span class="line"><span class="meta"># CentOS 6</span></span><br><span class="line">wget -O <span class="meta-keyword">/etc/</span>yum.repos.d/CentOS-Base.repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-6.repo</span></span><br><span class="line"><span class="meta"># CentOS 7</span></span><br><span class="line">wget -O <span class="meta-keyword">/etc/</span>yum.repos.d/CentOS-Base.repo http:<span class="comment">//mirrors.aliyun.com/repo/Centos-7.repo</span></span><br></pre></td></tr></table></figure><p></p><p>注意如果没有安装wget，可以从下面的网址中先手动下载，然后上传到linux上安装：<a href="http://www.rpmfind.net/linux/rpm2html/search.php?query=wget" target="_blank" rel="noopener">http://www.rpmfind.net/linux/rpm2html/search.php?query=wget</a></p><p>（3）执行命令，重新生成cache<br></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean <span class="keyword">all</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p></p><a id="more"></a><h3 id="方式二：使用官网的镜像"><a href="#方式二：使用官网的镜像" class="headerlink" title="方式二：使用官网的镜像"></a>方式二：使用官网的镜像</h3><p>（1）把/etc/yum.repos.d/下面所有的源给删除掉了</p><p>（2）执行下面的命令，重新生成镜像<br></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">//</span>执行这个命令之后</span><br><span class="line">rpm -Uvh --force http:<span class="regexp">//mi</span>rror.centos.org<span class="regexp">/centos-7/</span><span class="number">7</span><span class="regexp">/os/</span>x86_64<span class="regexp">/Packages/</span>centos-release-<span class="number">7</span>-<span class="number">4.1708</span>.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p></p><p>（3）查看/etc/yum.repos.d/下面目录，就会发现镜像已经安装完毕：<br></p><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root<span class="number"> 1664 </span>8月 <span class="number"> 30 </span>23:53 CentOS-Base.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root<span class="number"> 1309 </span>8月 <span class="number"> 30 </span>23:53 CentOS-CR.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root <span class="number"> 649 </span>8月 <span class="number"> 30 </span>23:53 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root <span class="number"> 314 </span>8月 <span class="number"> 30 </span>23:53 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root <span class="number"> 630 </span>8月 <span class="number"> 30 </span>23:53 CentOS-Media.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root<span class="number"> 1331 </span>8月 <span class="number"> 30 </span>23:53 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--.<span class="number"> 1 </span>root root<span class="number"> 3830 </span>8月 <span class="number"> 30 </span>23:53 CentOS-Vault.repo</span><br></pre></td></tr></table></figure><p></p><p>（4）生成缓存<br></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum clean <span class="keyword">all</span></span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p></p><p>必要时可以执行yum update更新当前系统的安装包为新的</p><p>手动下载命令，例子:<br></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装<span class="keyword">vim</span>组件</span><br><span class="line">yum install -<span class="keyword">y</span> <span class="keyword">vim</span></span><br><span class="line"> </span><br><span class="line">#卸载<span class="keyword">vim</span>组件</span><br><span class="line">yum <span class="built_in">remove</span> <span class="keyword">vim</span></span><br></pre></td></tr></table></figure><p></p><p>推荐使用方式一。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>MAC在同一程序切换窗口</title>
      <link href="/2018/12/04/MAC%E5%9C%A8%E5%90%8C%E4%B8%80%E7%A8%8B%E5%BA%8F%E5%88%87%E6%8D%A2%E7%AA%97%E5%8F%A3/"/>
      <url>/2018/12/04/MAC%E5%9C%A8%E5%90%8C%E4%B8%80%E7%A8%8B%E5%BA%8F%E5%88%87%E6%8D%A2%E7%AA%97%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在MAC下切换窗口是command+tab键，这个是多程序之间切换。那么在同一程序下，比如多个独立浏览器之间或者word之间切换呢？</p></blockquote><h3 id="同一程序切换窗口："><a href="#同一程序切换窗口：" class="headerlink" title="同一程序切换窗口："></a>同一程序切换窗口：</h3><p><code>command + ~</code>组合按键，在同时按住数字区域第一个键。</p><ul><li>多个浏览器窗口之间切换</li><li>多个Word之间切换</li></ul><h3 id="不同程序之间切换："><a href="#不同程序之间切换：" class="headerlink" title="不同程序之间切换："></a>不同程序之间切换：</h3><p><code>command + tab</code>键进行切换</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>基于人工智能的树莓派人脸识别系统(Intelligent Facial Recognition System)</title>
      <link href="/2018/12/01/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F(Intelligent%20Facial%20Recognition%20System)/"/>
      <url>/2018/12/01/%E5%9F%BA%E4%BA%8E%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%9A%84%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F(Intelligent%20Facial%20Recognition%20System)/</url>
      
        <content type="html"><![CDATA[<p>This is a project of the face recognizer with Movidius on RaspberryPi 3B+ platform. The project also uses Django and Django REST framework which providing the web platform. The project would like to build a safety and intelligent face recognition system in AI era.</p><p>If you appreciate the content 📖, support projects visibility, give 👍| ⭐| 👏</p><p>GitHub: <a href="https://github.com/nature1995/Face_Recognition_System" target="_blank" rel="noopener">https://github.com/nature1995/Face_Recognition_System</a></p><h1 id="Compatibility"><a href="#Compatibility" class="headerlink" title="Compatibility"></a>Compatibility</h1><p>The code is tested using Tensorflow r1.7 and Movidius NCSDK2 under Debin 2018-06-27（Kernel version:4.14） with django 2.1.1 and Python 3.5.</p><h1 id="Real-Product-Images"><a href="#Real-Product-Images" class="headerlink" title="Real Product Images"></a>Real Product Images</h1><p><img src="https://github.com/nature1995/Face_Recognition_System/raw/master/image/2.jpg" alt="image"><br><a id="more"></a><br><img src="https://github.com/nature1995/Face_Recognition_System/raw/master/image/1.jpg" alt="image"><br><img src="https://github.com/nature1995/Face_Recognition_System/raw/master/image/3.jpg" alt="image"></p><h1 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h1><ul><li>Logitech HD Webcam C270</li><li>Micro SD Card 32G</li><li>Raspberry Pi 3 B+</li><li>Intel Movidius Neural Compute Stick</li></ul><p>The code requires <a href="https://www.python.org/download/releases/3.5/" target="_blank" rel="noopener">Python 3.5</a>, <a href="https://www.tensorflow.org/install/" target="_blank" rel="noopener">Tensorflow 1.7</a>, as well as the following python libraries:</p><ul><li>Pillow</li><li>django</li><li>django-allauth 0.37.1</li><li>django-widget-tweaks 1.4.3</li><li>pip 18.0</li><li>qrcode 6.0</li><li>setuptools 40.4.3</li></ul><p>Those modules can be installed using: <code>pip3 install xxx</code>.</p><h2 id="Neural-Compute-Application-Zoo"><a href="#Neural-Compute-Application-Zoo" class="headerlink" title="Neural Compute Application Zoo"></a>Neural Compute Application Zoo</h2><p>This repository is a place for any interested developers to share their projects (code and Neural Network content) that make use of the Intel® Movidius™ Neural Compute Stick (Intel® Movidius™ NCS) and associated <a href="http://www.github.com/movidius/ncsdk" target="_blank" rel="noopener">Intel® Movidius™ Neural Compute Software Development Kit</a>.</p><p>You can use the following url(<a href="https://github.com/movidius/ncappzoo" target="_blank" rel="noopener">NC App Zoo</a>) or git command to use the ncsdk2 branch of the NC App Zoo repo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b ncsdk2 https://github.com/movidius/ncappzoo.git</span><br></pre></td></tr></table></figure><h2 id="Install-Django-and-Django-REST-framework"><a href="#Install-Django-and-Django-REST-framework" class="headerlink" title="Install Django and Django REST framework"></a>Install Django and Django REST framework</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">pip3 -V</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U setuptools</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U django</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U djangorestframework</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U django-filter</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U markdown</span><br><span class="line"></span><br><span class="line">sudo pip3 install -U requests</span><br></pre></td></tr></table></figure><h2 id="Install-Adafruit-Python-DHT-library"><a href="#Install-Adafruit-Python-DHT-library" class="headerlink" title="Install Adafruit_Python_DHT library"></a>Install Adafruit_Python_DHT library</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/adafruit/Adafruit_Python_DHT.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> Adafruit_Python_DHT</span><br><span class="line"></span><br><span class="line">sudo python3 setup.py install</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><h2 id="Install-Adafruit-Python-BMP-library"><a href="#Install-Adafruit-Python-BMP-library" class="headerlink" title="Install Adafruit_Python_BMP library"></a>Install Adafruit_Python_BMP library</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/adafruit/Adafruit_Python_BMP.git</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> Adafruit_Python_BMP</span><br><span class="line"></span><br><span class="line">sudo python3 setup.py install</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><h2 id="Install-psutil-process-and-system-utilities"><a href="#Install-psutil-process-and-system-utilities" class="headerlink" title="Install psutil (process and system utilities)"></a>Install psutil (process and system utilities)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install psutil</span><br></pre></td></tr></table></figure><h1 id="rpi-mjpg-streamer"><a href="#rpi-mjpg-streamer" class="headerlink" title="rpi-mjpg-streamer"></a>rpi-mjpg-streamer</h1><p>Instructions and helper scripts for running mjpg-streamer on Raspberry Pi.</p><h2 id="A-Setup-mjpg-streamer"><a href="#A-Setup-mjpg-streamer" class="headerlink" title="A. Setup mjpg-streamer"></a>A. Setup mjpg-streamer</h2><h3 id="Enable-Raspberry-Pi-Camera-module-from-raspi-config"><a href="#Enable-Raspberry-Pi-Camera-module-from-raspi-config" class="headerlink" title="Enable Raspberry Pi Camera module from raspi-config"></a>Enable Raspberry Pi Camera module from raspi-config</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo raspi-<span class="built_in">config</span></span><br></pre></td></tr></table></figure><h3 id="Install-necessary-packages-for-mjpg-streamer"><a href="#Install-necessary-packages-for-mjpg-streamer" class="headerlink" title="Install necessary packages for mjpg-streamer"></a>Install necessary packages for mjpg-streamer</h3><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install build-essential libjpeg8-<span class="built_in">dev</span> imagemagick libv4l-<span class="built_in">dev</span> git cmake uvcdynctrl</span><br></pre></td></tr></table></figure><h3 id="Build-mjpg-streamer"><a href="#Build-mjpg-streamer" class="headerlink" title="Build mjpg-streamer"></a>Build mjpg-streamer</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ln -s <span class="regexp">/usr/</span>include<span class="regexp">/linux/</span>videodev2.h <span class="regexp">/usr/</span>include<span class="regexp">/linux/</span>videodev.h</span><br><span class="line">$ git clone <span class="string">https:</span><span class="comment">//github.com/jacksonliam/mjpg-streamer</span></span><br><span class="line">$ cd mjpg-streamer/mjpg-streamer-experimental</span><br><span class="line">$ cmake -<span class="string">DCMAKE_INSTALL_PREFIX:</span>PATH=.. .</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h3 id="Setup-video4linux-for-Raspberry-Pi-Camera-module"><a href="#Setup-video4linux-for-Raspberry-Pi-Camera-module" class="headerlink" title="Setup video4linux for Raspberry Pi Camera module"></a>Setup video4linux for Raspberry Pi Camera module</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo modprobe bcm2835-v4l2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/modules</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add following line:</span></span><br><span class="line">bcm2835-v4l2</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /boot/config.txt</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> add following line <span class="keyword">if</span> you want to <span class="built_in">disable</span> RPi camera<span class="string">'s LED:</span></span></span><br><span class="line">disable_camera_led=1</span><br></pre></td></tr></table></figure><h3 id="Add-yourself-to-the-video-group"><a href="#Add-yourself-to-the-video-group" class="headerlink" title="Add yourself to the video group"></a>Add yourself to the video group</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo usermod -<span class="selector-tag">a</span> -G <span class="selector-tag">video</span> <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><h2 id="B-Run-mjpg-streamer"><a href="#B-Run-mjpg-streamer" class="headerlink" title="B. Run mjpg-streamer"></a>B. Run mjpg-streamer</h2><h3 id="1-Clone-this-repository"><a href="#1-Clone-this-repository" class="headerlink" title="1. Clone this repository"></a>1. Clone this repository</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">clone</span> <span class="title">https</span>://github.com/meinside/rpi-mjpg-streamer.git</span><br></pre></td></tr></table></figure><h3 id="2-a-Run-mjpg-streamer-from-the-shell-directly"><a href="#2-a-Run-mjpg-streamer-from-the-shell-directly" class="headerlink" title="2-a. Run mjpg-streamer from the shell directly"></a>2-a. Run mjpg-streamer from the shell directly</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">copy</span> &amp; <span class="keyword">edit</span> <span class="keyword">run</span>-mjpg-streamer.<span class="keyword">sh</span> to your environment or needs</span><br><span class="line">$ cp rpi-mjpg-streamer/<span class="keyword">run</span>-mjpg-streamer.<span class="keyword">sh</span>.<span class="keyword">sample</span> somewhere/<span class="keyword">run</span>-mjpg-streamer.<span class="keyword">sh</span></span><br><span class="line">$ vi somewhere/<span class="keyword">run</span>-mjpg-streamer.<span class="keyword">sh</span></span><br><span class="line"></span><br><span class="line"># then <span class="keyword">run</span></span><br><span class="line">$ somewhere/<span class="keyword">run</span>-mjpg-streamer.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h3 id="2-b-Or-run-mjpg-streamer-as-a-service"><a href="#2-b-Or-run-mjpg-streamer-as-a-service" class="headerlink" title="2-b. Or run mjpg-streamer as a service"></a>2-b. Or run mjpg-streamer as a service</h3><h4 id="systemd"><a href="#systemd" class="headerlink" title="systemd"></a>systemd</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># copy &amp; edit systemd/mjpg-streamer.service file,</span></span><br><span class="line">$ sudo cp rpi-mjpg-streamer/systemd/mjpg-streamer.service.sample /<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">mjpg</span>-<span class="title">streamer</span>.<span class="title">service</span></span></span><br><span class="line">$ sudo vi /<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">mjpg</span>-<span class="title">streamer</span>.<span class="title">service</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># then register as a service</span></span><br><span class="line">$ sudo systemctl enable mjpg-streamer.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># or remove it</span></span><br><span class="line">$ sudo systemctl disable mjpg-streamer.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># and start/stop it</span></span><br><span class="line">$ sudo systemctl start mjpg-streamer.service</span><br><span class="line">$ sudo systemctl stop mjpg-streamer.service</span><br></pre></td></tr></table></figure><h2 id="C-Connect"><a href="#C-Connect" class="headerlink" title="C. Connect"></a>C. Connect</h2><p>Connect through the web browser:</p><p><img src="https://github.com/nature1995/Face_Recognition_System/raw/master/image/IFRS01.png" alt="image"></p><p>Most modern browsers(including mobile browsers like Safari and Chrome) will show the live stream immediately.</p><h1 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h1><h2 id="Virtualenv"><a href="#Virtualenv" class="headerlink" title="Virtualenv"></a>Virtualenv</h2><p>pip3 install virtualenv</p><p>Run Virtualenv</p><p>source venv/bin/activate</p><h2 id="sqlite3-数据库文件db-sqlite3-权限-666"><a href="#sqlite3-数据库文件db-sqlite3-权限-666" class="headerlink" title="sqlite3 数据库文件db.sqlite3 权限 666"></a>sqlite3 数据库文件db.sqlite3 权限 666</h2><p>chmod 666 db.sqlite3</p><h2 id="django-所在文件夹-权限-775"><a href="#django-所在文件夹-权限-775" class="headerlink" title="django 所在文件夹 权限 775"></a>django 所在文件夹 权限 775</h2><p>chmod 777 xxx</p><h1 id="Citation"><a href="#Citation" class="headerlink" title="Citation"></a>Citation</h1><p>Just can be used for non-business projects.</p>]]></content>
      
      
      <categories>
          
          <category> 源码 </category>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberry Pi </tag>
            
            <tag> Hardware </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Django博客开发：通过django-allauth实现第三方账号登录教程</title>
      <link href="/2018/12/01/Django%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91%EF%BC%9A%E9%80%9A%E8%BF%87django-allauth%E5%AE%9E%E7%8E%B0%E7%AC%AC%E4%B8%89%E6%96%B9%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E6%95%99%E7%A8%8B/"/>
      <url>/2018/12/01/Django%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%8F%91%EF%BC%9A%E9%80%9A%E8%BF%87django-allauth%E5%AE%9E%E7%8E%B0%E7%AC%AC%E4%B8%89%E6%96%B9%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>因为需要加入博客的用户登录、注册系统，为了让网站支持第三方登录，所以只用使用<strong>django-allauth</strong>，根据其官方文档这里：<strong><a href="https://link.jianshu.com?t=https://django-allauth.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">https://django-allauth.readthedocs.io/en/latest/index.html</a></strong>），同时支持本地和第三方账号（Github，百度、微博、微信等等。。），集成了邮箱验证、密码修改、本地账号关联（多个）第三方账号等各种功能，真是厉害了。</p><h2 id="开发环境：python-3-6、django-2-1-3"><a href="#开发环境：python-3-6、django-2-1-3" class="headerlink" title="开发环境：python 3.6、django 2.1.3"></a>开发环境：python 3.6、django 2.1.3</h2><h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><p><strong>安装</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django-allauth</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>project/settings.py设置</strong></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [# 必须安装的app</span><br><span class="line">       <span class="string">'django.contrib.auth'</span>, </span><br><span class="line">       <span class="string">'django.contrib.sites'</span>, <span class="string">'allauth'</span>,</span><br><span class="line">       <span class="string">'allauth.account'</span>,   </span><br><span class="line">       <span class="string">'allauth.socialaccount'</span>,</span><br><span class="line">      # 下面是第三方账号相关的，比如我选了weibo和github </span><br><span class="line">      <span class="string">'allauth.socialaccount.providers.weibo'</span>, </span><br><span class="line">      <span class="string">'allauth.socialaccount.providers.github'</span>,</span><br><span class="line">]</span><br><span class="line"> # django-allauth相关设置</span><br><span class="line">AUTHENTICATION_BACKENDS = (</span><br><span class="line">      # django admin所使用的用户登录与django-allauth无关 </span><br><span class="line">      <span class="string">'django.contrib.auth.backends.ModelBackend'</span>,</span><br><span class="line">      # `allauth` specific authentication methods, such <span class="keyword">as</span> login by e-mail </span><br><span class="line">      <span class="string">'allauth.account.auth_backends.AuthenticationBackend'</span>,</span><br><span class="line">)</span><br><span class="line"># 前面我们app里添加了django.contrib.sites,需要设置</span><br><span class="line">SITE_IDSITE_ID = <span class="number">1</span></span><br><span class="line">ACCOUNT_AUTHENTICATION_METHOD = <span class="string">'username_email'</span></span><br><span class="line">ACCOUNT_EMAIL_REQUIRED = <span class="literal">True</span></span><br></pre></td></tr></table></figure><p><code>ACCOUNT_AUTHENTICATION_METHOD = &#39;username_email&#39;</code>的作用是当用户登录时，既可以使用用户名也可以使用email， 其他可选的值是 <strong>“username”</strong>、<strong>“email”</strong> ，<code>ACCOUNT_EMAIL_REQUIRED = True</code>要求用户注册时必须填写email，默认False，email是选填的。</p><p><strong>project/urls.py 里include allauth的urls</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [ url(<span class="string">r'^accounts/'</span>, include(<span class="string">'allauth.urls'</span>)),]</span><br></pre></td></tr></table></figure><p>设置好后，我们就可以用’accounts/login’ 访问登录页面， ‘accounts/logout’ 注销， 其他的可以去 <strong>allauth/account/urls.py</strong>查看。</p><p>以上基本设置后，需要同步数据库 <code>python manage.py migrate runserver</code>, 访问登录页面，allauth提供的模板非常简陋， 是这样的</p><p><img src="https://i.loli.net/2018/12/02/5c02e791028bc.png" alt="201144936.png"></p><p>我们可以使用自己制作的模板，在<strong>project/templates/account</strong>下创建login.html即可override allauth自带的模板，allauth自带的模板放在<strong>allauth/templates/account</strong>下， 我们只需要在项目templates/account下创建相同名字的html即可覆盖。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p><strong>下面我们去注册页面test一下，先注册一个本地账号</strong></p><p>填写完注册信息后，却出现这样一个错误</p><p><img src="https://i.loli.net/2018/12/02/5c02e7b02ee3c.png" alt="107.png"></p><p>出现此错误的原因，官方文档也有说明，这是因为注册账号后，系统会自动发一封邮件来激活账号，但是我们还有发送邮件相关的设置。</p><p>django默认使用SMTP发送邮件，在project/settings.py如下设置：<br></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"># SMTP服务器，我使用的是sendclound的服务</span></span><br><span class="line"><span class="xml">EMAIL_HOST = 'smtp.sendcloud.net'</span></span><br><span class="line"><span class="xml">EMAIL_HOST_USER = '用户名'</span></span><br><span class="line"><span class="xml">EMAIL_HOST_PASSWORD = '对应的API key或者密码</span></span><br><span class="line"><span class="xml">'EMAIL_PORT = 25</span></span><br><span class="line"><span class="xml"># 是否使用了SSL 或者TLS</span></span><br><span class="line"><span class="xml">EMAIL_USE_SSL = True</span></span><br><span class="line"><span class="xml">EMAIL_USE_TLS = True</span></span><br><span class="line"><span class="xml"># 默认发件人，不设置的话django默认使用的webmaster@localhost</span></span><br><span class="line"><span class="xml">DEFAULT_FROM_EMAIL = 'Aaron-Zhao &amp;lt;noreply@aaron-zhao.com&amp;gt;</span></span><br></pre></td></tr></table></figure><p></p><p>完成以上设置后，注册账号是我们就可以收到邮件了，关于邮件的其他详细设置，请参照<strong><a href="https://link.jianshu.com?t=https://docs.djangoproject.com/en/1.10/topics/email/" target="_blank" rel="noopener">django的官方文档</a></strong></p><p>allauth默认的设置，当用户登录时会重定向到 /accounts/profile，这个页面allauth没有做，因为报错page not found，这个页面需要我们自己完成（请戳：<strong><a href="https://link.jianshu.com?t=http://www.aaron-zhao.com/post/5/" target="_blank" rel="noopener">django博客开发：添加用户资料页面和头像上传功能</a></strong>）。与此相关的参数是<strong>LOGIN_REDIRECT_URL</strong></p><p>在project/settings.py设置 <strong>LOGIN_REDIRECT_URL = ‘/‘ </strong>，这样用户登录后的页面就会跳转到首页，而不是用户profile页面。</p><p><strong>下面我们去测试一下第三方账号登录，这里以github为例</strong>，</p><p><strong><a href="https://link.jianshu.com?t=https://github.com/settings/applications/new" target="_blank" rel="noopener">Github OAuth注册页面：https://github.com/settings/applications/new</a></strong></p><p>要注意将回调地址<strong>callback URL</strong>设置为 <strong><a href="https://link.jianshu.com?t=http://127.0.0.1:8000/accounts/github/login/callback/" target="_blank" rel="noopener">http://127.0.0.1:8000/accounts/github/login/callback/</a>，</strong>完成注册后 我们会获得一个Cliend ID 和 Client Secret，后面我们会用到</p><p>先进入admin后台，会发现增加了social accounts和站点</p><p><img src="https://i.loli.net/2018/12/02/5c02e7c801608.png" alt="11145251.png"></p><p>点开站点管理，将example.com改为我们博客的域名，在开发环境下，我们用127.0.0.1:8000</p><p><img src="https://i.loli.net/2018/12/02/5c02e7dc1823d.png" alt="201145301.png"></p><p>点击SOCIAL ACCOUNTS下的Social application，增加一个application，如下图所示</p><p>provider选Github，这里的provider就是我们在INSTALLED_APP里增加的socialaccount.provider，client id 和secret key 我们在github注册应用里获得了，将sites加入到右边 选中的sites</p><p><img src="https://i.loli.net/2018/12/02/5c02e7ee96095.png" alt="145409.png"></p><p>完成以上设置后，注销，然后回到登录页面，选中github登录，授权应用即可，成功登录后，邮箱里也会收到一份激活邮件，这是因为django-allauth会自动为我们添加一个本地账号，根据你的social account用户名和email。</p><h2 id="其他相关设置"><a href="#其他相关设置" class="headerlink" title="其他相关设置"></a>其他相关设置</h2><p>project/settings.py</p><p><code>ACCOUNT_EMAIL_VERIFICATION = &#39;optional&#39; / &#39;mandatory&#39; / &#39;none&#39;</code> 默认值是’optional’，当其等于’mandatory’时，在email未验证之前，本地注册的用户无法登陆。’optional’ 和 ‘none’ 则不要求必须验证邮箱，两者区别是’optional’ 依然会发送验证邮件，而’none’ 则不会</p><p><code>SOCIALACCOUNT_EMAIL_VERIFICATION = &#39;optional&#39; / &#39;mandatory&#39; / &#39;none&#39;</code>与ACCOUNT_EMAIL_VERIFICATION 同理，作用于第三方账号的注册，默认值等于前者，</p><p><code>LOGIN_URL = &#39;/accounts/login&#39;</code> 当用户验证邮件里的验证链接后，如果当前没有登录的用户，则会指向LOGIN_URL</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sublime-text3-3176版本激活</title>
      <link href="/2018/12/01/Sublime-text3-3176%E7%89%88%E6%9C%AC%E6%BF%80%E6%B4%BB/"/>
      <url>/2018/12/01/Sublime-text3-3176%E7%89%88%E6%9C%AC%E6%BF%80%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p><img src="https://i.loli.net/2018/12/02/5c02df25e5ec3.png" alt="1201142054.png"></p><h3 id="步骤一："><a href="#步骤一：" class="headerlink" title="步骤一："></a>步骤一：</h3><p>更改hosts：sudo vim /private/etc/hosts<br></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>       <span class="selector-tag">www</span><span class="selector-class">.sublimetext</span><span class="selector-class">.com</span></span><br><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span>       <span class="selector-tag">license</span><span class="selector-class">.sublimehq</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><p></p><a id="more"></a><h3 id="步骤二："><a href="#步骤二：" class="headerlink" title="步骤二："></a>步骤二：</h3><p>在Sublime里面Help–&gt;License里面输入下面激活码：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">----- BEGIN LICENSE -----</span><br><span class="line">sgbteam</span><br><span class="line">Single User License</span><br><span class="line">EA7E<span class="number">-1153259</span></span><br><span class="line"><span class="number">8891</span>CBB9 F1513E4F <span class="number">1</span>A3405C1 A865D53F</span><br><span class="line"><span class="number">115</span>F202E <span class="number">7</span>B91AB2D <span class="number">0</span>D2A40ED <span class="number">352</span>B269B</span><br><span class="line"><span class="number">76E84</span>F0B CD69BFC7 <span class="number">59</span>F2DFEF E267328F</span><br><span class="line"><span class="number">215652</span>A3 E88F9D8F <span class="number">4</span>C38E3BA <span class="number">5</span>B2DAAE4</span><br><span class="line"><span class="number">969624E7</span> DC9CD4D5 <span class="number">717</span>FB40C <span class="number">1</span>B9738CF</span><br><span class="line"><span class="number">20</span>B3C4F1 E917B5B3 <span class="number">87</span>C38D9C ACCE7DD8</span><br><span class="line"><span class="number">5</span>F7EF854 <span class="number">86</span>B9743C FADC04AA FB0DA5C0</span><br><span class="line">F913BE58 <span class="number">42</span>FEA319 F954EFDD AE881E0B</span><br><span class="line">------ END LICENSE ------</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Software </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>蓝桥杯嵌入式与开发组——历年比赛试题与源码</title>
      <link href="/2018/12/01/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8E%E5%BC%80%E5%8F%91%E7%BB%84%E2%80%94%E2%80%94%E5%8E%86%E5%B9%B4%E6%AF%94%E8%B5%9B%E8%AF%95%E9%A2%98%E4%B8%8E%E6%BA%90%E7%A0%81/"/>
      <url>/2018/12/01/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%B5%8C%E5%85%A5%E5%BC%8F%E4%B8%8E%E5%BC%80%E5%8F%91%E7%BB%84%E2%80%94%E2%80%94%E5%8E%86%E5%B9%B4%E6%AF%94%E8%B5%9B%E8%AF%95%E9%A2%98%E4%B8%8E%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯历年比赛试题与源码（嵌入式与开发组）"><a href="#蓝桥杯历年比赛试题与源码（嵌入式与开发组）" class="headerlink" title="蓝桥杯历年比赛试题与源码（嵌入式与开发组）"></a>蓝桥杯历年比赛试题与源码（嵌入式与开发组）</h1><p>If you appreciate the content 📖, support projects visibility, give 👍| ⭐| 👏</p><p>Github: <a href="https://github.com/nature1995/lanqiao-competition-code" target="_blank" rel="noopener">https://github.com/nature1995/lanqiao-competition-code</a></p><h3 id="第九届决赛模拟题"><a href="#第九届决赛模拟题" class="headerlink" title="第九届决赛模拟题"></a>第九届决赛模拟题</h3><h3 id="第九届省赛模拟题"><a href="#第九届省赛模拟题" class="headerlink" title="第九届省赛模拟题"></a>第九届省赛模拟题</h3><h3 id="第八届决赛-频率控制器的功能设计与实现"><a href="#第八届决赛-频率控制器的功能设计与实现" class="headerlink" title="第八届决赛-频率控制器的功能设计与实现"></a>第八届决赛-频率控制器的功能设计与实现</h3><h3 id="第八届省赛-模拟升降控制器控制器"><a href="#第八届省赛-模拟升降控制器控制器" class="headerlink" title="第八届省赛-模拟升降控制器控制器"></a>第八届省赛-模拟升降控制器控制器</h3><h3 id="第七届决赛-温湿度监控设备"><a href="#第七届决赛-温湿度监控设备" class="headerlink" title="第七届决赛-温湿度监控设备"></a>第七届决赛-温湿度监控设备</h3><h3 id="第七届省赛-模拟液位检测告警系统-第二版"><a href="#第七届省赛-模拟液位检测告警系统-第二版" class="headerlink" title="第七届省赛-模拟液位检测告警系统 第二版"></a>第七届省赛-模拟液位检测告警系统 第二版</h3><h3 id="第六届决赛-电压测量与互补-PWM-信号输出"><a href="#第六届决赛-电压测量与互补-PWM-信号输出" class="headerlink" title="第六届决赛-电压测量与互补 PWM 信号输出"></a>第六届决赛-电压测量与互补 PWM 信号输出</h3><h3 id="第六届省赛-电压测量监控设备"><a href="#第六届省赛-电压测量监控设备" class="headerlink" title="第六届省赛-电压测量监控设备"></a>第六届省赛-电压测量监控设备</h3><h3 id="第五届省赛-双通道方波频率检测与倍频输出"><a href="#第五届省赛-双通道方波频率检测与倍频输出" class="headerlink" title="第五届省赛-双通道方波频率检测与倍频输出"></a>第五届省赛-双通道方波频率检测与倍频输出</h3><h3 id="第四届省赛-双路输出控制器"><a href="#第四届省赛-双路输出控制器" class="headerlink" title="第四届省赛-双路输出控制器"></a>第四届省赛-双路输出控制器</h3>]]></content>
      
      
      <categories>
          
          <category> 源码 </category>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hardware </tag>
            
            <tag> STM32 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Gitment评论功能接入Jekyll &amp; Hexo教程</title>
      <link href="/2018/11/29/Gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%8E%A5%E5%85%A5Jekyll_Hexo%E6%95%99%E7%A8%8B/"/>
      <url>/2018/11/29/Gitment%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E6%8E%A5%E5%85%A5Jekyll_Hexo%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前接入的评论功能，都因为各种原因被放弃了，今天从新计划接入评论功能，所以就在了今天这篇文章。</p><h3 id="评论模块"><a href="#评论模块" class="headerlink" title="评论模块"></a>评论模块</h3><ul><li><strong>多说</strong> - 最多用户使用的评论，但遗憾2017年6月将暂定服务；不建议新用户使用，但为旧用户保留，也感谢多说一路的陪伴；</li><li><strong>网易云跟帖</strong> - 网易提供的评论组件，功能比较简单，性能优秀；管理后台在查询上还不算特别智能，但足够普通用户使用；</li><li><strong>畅言</strong> - 搜狐提供的评论组件，功能丰富，体验优异；但必须进行域名备案。只要域名备过案就可以通过审核。</li><li><strong>Disqus</strong> - 国外使用较多的评论组件。万里长城永不倒，一枝红杏出墙来，你懂的。</li></ul><p>以上评论模块应该大家都知道，多说和网易云跟帖没有了，畅言要备案，对于对于挂靠在GitHub的博客非常的不友好，放弃！Disqus，不希望自己的博客，可以不分国界！也放弃！</p><p>所以，将是我们要介绍的Gitment!<br><a id="more"></a></p><h3 id="Gitment评论模块"><a href="#Gitment评论模块" class="headerlink" title="Gitment评论模块"></a>Gitment评论模块</h3><blockquote><p>Gitment is a comment system based on GitHub Issues, which can be used in the frontend without any server-side implementation.</p><p>Gitment 基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。</p></blockquote><p>想了解具体示例，可以点击查看官方Demo Page：<a href="https://link.jianshu.com?t=https%3A%2F%2Fimsun.github.io%2Fgitment%2F" target="_blank" rel="noopener">Gitment Demo</a></p><p>具体的接入我就不在这里说了，本文末有参考链接大家可以去了解学习，主要是说一下其中的坑点。</p><h3 id="Gitment坑点小结"><a href="#Gitment坑点小结" class="headerlink" title="Gitment坑点小结"></a>Gitment坑点小结</h3><h5 id="1、owner-‘Your-GitHub-ID’"><a href="#1、owner-‘Your-GitHub-ID’" class="headerlink" title="1、owner: ‘Your GitHub ID’"></a>1、owner: ‘Your GitHub ID’</h5><p><code>owner: &#39;你的 GitHub ID&#39;,</code></p><p>可以是你的GitHub用户名，也可以是github id，建议直接用GitHub用户名就可以。</p><h5 id="2、repo-‘The-repo-to-store-comments"><a href="#2、repo-‘The-repo-to-store-comments" class="headerlink" title="2、repo: ‘The repo to store comments"></a>2、repo: ‘The repo to store comments</h5><p><code>repo: &#39;存储评论的 github repo&#39;</code></p><p>这个是你要存储评论内容的仓库名，可以与博客下的仓库，也可以新建一个仓库专门存储评论内容的。</p><h5 id="3、Error-Not-Found问题"><a href="#3、Error-Not-Found问题" class="headerlink" title="3、Error: Not Found问题"></a>3、Error: Not Found问题</h5><p>owner或者repo配置错误了，注意名字和仓库名字的大小写。</p><h5 id="4、Error-Comments-Not-Initialized"><a href="#4、Error-Comments-Not-Initialized" class="headerlink" title="4、Error: Comments Not Initialized"></a>4、Error: Comments Not Initialized</h5><ul><li>在注册OAuth Application这个步骤中，给Authorization callback URL指定的地址错了</li><li>还没有在该页面的Gitment评论区登陆GitHub账号</li></ul><p>如果还是不行，可以参考另一个情况 <a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fimsun%2Fgitment%2Fissues%2F95" target="_blank" rel="noopener">Error: Comments Not Initialized · Issue #95 · imsun/gitment</a></p><h5 id="5、Error：validation-failed"><a href="#5、Error：validation-failed" class="headerlink" title="5、Error：validation failed"></a>5、Error：validation failed</h5><p>issue的标签label有长度限制！labels的最大长度限制是50个字符。</p><p><code>id: &#39;页面 ID&#39;, // 可选。默认为 location.href</code></p><p>这个id的作用，就是针对一个文章有唯一的标识来判断这篇本章。</p><p>在issues里面，可以发现是根据网页标题来新建issues的，然后每个issues有两个labels（标签），一个是gitment，另一个就是id。</p><p>所以明白了原理后，就是因为id太长，导致初始化失败，现在就是要让id保证在50个字符内。</p><p>对应配置的id为：<br></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">id:</span> <span class="string">'&lt;%= page.title %&gt;'</span></span><br></pre></td></tr></table></figure><p></p><p>如果用网页标题也不能保证在50个字符！<br>最后，我用文章的时间，这样长度是保证在50个字符内，完美解决！（避免了文章每次更新标题或路径时，会重新创建一个issue评论的问题。）<br></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span>: '&lt;%= page.<span class="built_in">date</span> %&gt;'</span><br></pre></td></tr></table></figure><p></p><h5 id="6、gitment的汉化"><a href="#6、gitment的汉化" class="headerlink" title="6、gitment的汉化"></a>6、gitment的汉化</h5><p>只需到模板里将原来定义CSS和JS的那两行改成：<br></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">rel</span>=<span class="string">"stylesheet"</span> <span class="attribute">href</span>=<span class="string">"https://billts.site/extra_css/gitment.css"</span>&gt;</span><br><span class="line">&lt;script <span class="attribute">src</span>=<span class="string">"https://billts.site/js/gitment.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p></p><p>即可。来源：<a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fimsun%2Fgitment%2Fissues%2F104" target="_blank" rel="noopener">https://github.com/imsun/gitment/issues/104</a></p><h5 id="7、所有文章一键初始化评论"><a href="#7、所有文章一键初始化评论" class="headerlink" title="7、所有文章一键初始化评论"></a>7、所有文章一键初始化评论</h5><p>配置正确的文章，第一次显示，提示还没有初始化：</p><p><img src="https://i.loli.net/2018/11/30/5c007d29f22e0.png" alt="99517-c690c994c6e43496.png"></p><p>文章作者需要登陆GitHub授权后，会显示初始化按钮(注意，不要多点按钮，否则issues出现多条一样的)：</p><p><img src="https://i.loli.net/2018/11/30/5c007d29f23fb.png" alt="99517-bddc67793047456b.png"></p><p>点击初始化按钮后，如果正常就会出现：</p><p><img src="https://i.loli.net/2018/11/30/5c007d29a5614.png" alt="99517-21a83b5ea0ee7f78.png"></p><p>关于自动初始化所有文章的功能，到本文编写时，还没有一个完善的解决方法，就是用脚本来执行自动化，有需要的可以详细了解：<a href="https://link.jianshu.com?t=https%3A%2F%2Fgithub.com%2Fimsun%2Fgitment%2Fissues%2F5" target="_blank" rel="noopener">https://github.com/imsun/gitment/issues/5</a></p><h5 id="8、请保持克制，切勿滥用。"><a href="#8、请保持克制，切勿滥用。" class="headerlink" title="8、请保持克制，切勿滥用。"></a>8、请保持克制，切勿滥用。</h5><p>作者提醒使用本项目的用户，请保持克制，切勿滥用。<a href="https://link.jianshu.com?t=https%3A%2F%2Fimsun.net%2Fposts%2Fgitment-introduction%2F" target="_blank" rel="noopener">详见 Gitment：使用 GitHub Issues 搭建评论系统</a></p><h5 id="9、订阅issue"><a href="#9、订阅issue" class="headerlink" title="9、订阅issue"></a>9、订阅issue</h5><p>issue订阅，有新评论时就可以通过邮件提醒，这个功能是把双刃剑，因为有些垃圾订阅邮件骚扰，大家看着用吧。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Gitment目前来说，已经解决了一个博客简单的评论功能，点赞 / 有完整的 Markdown / GFM 和代码高亮支持!</p><p>通过Gitment至少可以证明一点，生产力的发展有无限可能，环境的限制，会有的各种奇异的想法，或者奇异的东西出现，Gitment就是一个完美的证明，充分解决了一个简单博客的评论功能。另一方面，与国内的生活要求希望大家能够遵守规则，让GitHub和Gitment在我们生活中快乐成长！</p>]]></content>
      
      
      <categories>
          
          <category> Jekyll </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitment </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Jupyter Lab Config on Raspberry Pi</title>
      <link href="/2018/11/29/jupyter-lab-config-raspi/"/>
      <url>/2018/11/29/jupyter-lab-config-raspi/</url>
      
        <content type="html"><![CDATA[<h2 id="To-activate-this-environment-use"><a href="#To-activate-this-environment-use" class="headerlink" title="To activate this environment, use"></a>To activate this environment, use</h2><pre><code>$ conda activate base$ conda activate tensorflow</code></pre><h4 id="树莓派：-source-activate-tensorflow"><a href="#树莓派：-source-activate-tensorflow" class="headerlink" title="树莓派： source  activate tensorflow"></a>树莓派： source activate tensorflow</h4><h2 id="To-deactivate-an-active-environment-use"><a href="#To-deactivate-an-active-environment-use" class="headerlink" title="To deactivate an active environment, use"></a>To deactivate an active environment, use</h2><pre><code>$ conda deactivate</code></pre><h4 id="树莓派：-source-deactivate-tensorflow"><a href="#树莓派：-source-deactivate-tensorflow" class="headerlink" title="树莓派： source  deactivate tensorflow"></a>树莓派： source deactivate tensorflow</h4><p>conda install jupyter notebook<br>conda install jupyterlab</p><p>jupyter notebook –ip=0.0.0.0 –no-browser –allow-root<br>jupyter lab –ip=0.0.0.0 –no-browser –allow-root</p><p>不输出日志 jupyter lab –ip=0.0.0.0 –no-browser –allow-root &gt;/dev/null 2&gt;&amp;1 &amp;<br>jupyter lab &gt;/dev/null 2&gt;&amp;1 &amp;</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Raspberry Pi </tag>
            
            <tag> Jupyter </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Keras：安装graphviz和pydot后出现RuntimeError：无法导入pydot</title>
      <link href="/2018/11/29/Keras%E5%AE%89%E8%A3%85graphviz%E5%92%8Cpydot%E5%90%8E%E5%87%BA%E7%8E%B0RuntimeError%E6%97%A0%E6%B3%95%E5%AF%BC%E5%85%A5pydot/"/>
      <url>/2018/11/29/Keras%E5%AE%89%E8%A3%85graphviz%E5%92%8Cpydot%E5%90%8E%E5%87%BA%E7%8E%B0RuntimeError%E6%97%A0%E6%B3%95%E5%AF%BC%E5%85%A5pydot/</url>
      
        <content type="html"><![CDATA[<h3 id="首先Conda安装graphviz："><a href="#首先Conda安装graphviz：" class="headerlink" title="首先Conda安装graphviz："></a>首先Conda安装graphviz：</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install graphviz </span><br><span class="line">pip install pydot</span><br></pre></td></tr></table></figure><h3 id="其次在运行的-py文件前面加入如下内容"><a href="#其次在运行的-py文件前面加入如下内容" class="headerlink" title="其次在运行的.py文件前面加入如下内容:"></a>其次在运行的.py文件前面加入如下内容:</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os os.environ[<span class="string">"PATH"</span>] += os.pathsep + <span class="string">'C:\\Users\\10057491\\AppData\\Local\\Continuum\\anaconda3\\envs\\tensorflow\\Library\\bin\\graphviz'</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Keras </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Centos 配置mailx使用外部smtp发送邮件</title>
      <link href="/2018/11/29/Centos-%E9%85%8D%E7%BD%AEmailx%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8smtp%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/"/>
      <url>/2018/11/29/Centos-%E9%85%8D%E7%BD%AEmailx%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8smtp%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="Centos-配置mailx使用外部smtp发送邮件"><a href="#Centos-配置mailx使用外部smtp发送邮件" class="headerlink" title="Centos 配置mailx使用外部smtp发送邮件"></a>Centos 配置mailx使用外部smtp发送邮件</h2><h3 id="安装mailx"><a href="#安装mailx" class="headerlink" title="安装mailx"></a>安装mailx</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mailx</span><br></pre></td></tr></table></figure><h3 id="配置mailx"><a href="#配置mailx" class="headerlink" title="配置mailx"></a>配置mailx</h3><p>推荐163邮箱，当然，QQ邮箱也是可以的，PS：记得要进邮箱打开SMTP</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/mail.rc //如果不存在，则编辑/etc/nail.rc</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件的末尾加入下面代码，相应帐号密码填写自己的帐号密码</span></span><br><span class="line">set <span class="keyword">from</span>=<span class="string">"xxx@163.com"</span></span><br><span class="line">set smtp=smtp<span class="number">.163</span>.com</span><br><span class="line">set smtp-auth-user=xxx</span><br><span class="line">set smtp-auth-password=邮箱密码</span><br><span class="line">set smtp-auth=login</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="使用mailx发送邮件"><a href="#使用mailx发送邮件" class="headerlink" title="使用mailx发送邮件"></a>使用mailx发送邮件</h3><p>发件人名称可不添加，第二步已配置过<br>假设邮件内容存储于mesg文件中，那么可以用如下2个方法：<br></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mailx -s <span class="string">"发件人名称 邮件标题"</span> xxx@<span class="number">163</span>.<span class="keyword">com</span> &lt; mesg</span><br><span class="line"><span class="keyword">cat</span> mesg | mailx -s <span class="string">"发件人名称 邮件标题"</span> xxx@<span class="number">163</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure><p></p><p>多个收件人之间用逗号分隔：<br></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cat</span> mesg | mailx -s <span class="string">"发件人名称 邮件标题"</span> xxx@<span class="number">163</span>.<span class="keyword">com</span>,xxx2@<span class="number">163</span>.<span class="keyword">com</span>,xxx3@<span class="number">163</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure><p></p><p>也可以直接从命令行输入邮件内容：<br></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mailx -s <span class="string">"发件人名称 邮件标题"</span> xxx<span class="symbol">@163</span>.com <span class="meta">##输入完后回车按Ctrl+D提交发送</span></span><br><span class="line">echo hello word | mailx -v -s <span class="string">" title"</span> xxx3<span class="symbol">@163</span>.com</span><br></pre></td></tr></table></figure><p></p><h4 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE:"></a>NOTE:</h4><p>记得要进邮箱打开SMTP<br>配置好后，记住查看是否打开代理（例如翻墙VPN）,代理可能会导致Telnet不通25端口</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VNC和远程桌面的区别</title>
      <link href="/2018/11/29/VNC%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>/2018/11/29/VNC%E5%92%8C%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h3 id="VNC和远程桌面的区别"><a href="#VNC和远程桌面的区别" class="headerlink" title="VNC和远程桌面的区别"></a>VNC和远程桌面的区别</h3><p>我们可以通过VNC(Virtual Network Computing)和远程桌面来连接到远程的计算机上，但是两者是有一定的区别的。</p><h3 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h3><p>VNC使用的是RFB协议来做屏幕分享和远程操作的软件，由著名的AT&amp;T欧洲研究实验室开发。使用时需要客户端软件和服务器软件配合使用。</p><h3 id="远程桌面"><a href="#远程桌面" class="headerlink" title="远程桌面"></a>远程桌面</h3><p>远程桌面使用RDP(Remote Desktop Protocol)远程桌面协议，大部分Windows都默认支持此协议，可以远程接入操作桌面。</p><h3 id="RFB和RDP区别"><a href="#RFB和RDP区别" class="headerlink" title="RFB和RDP区别"></a>RFB和RDP区别</h3><p>RFB是在服务器端将窗口在显存中画好之后将图像传给客户端，客户端只充当一个图像解码显示的角色； RDP则将画图的工作交给了客户端，服务器需要了解客户端显示能力的具体情况，以便作出相应调整。</p><p>RFB主要传图像，RDP主要传指令。就一般应用而言，RFB数据量太大，RDP对客户端要求较高，因此RFB适用于瘦客户端，RDP适用于低速网络。</p>]]></content>
      
      
      <categories>
          
          <category> Knowledge </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Virtualization </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>为什么北美东部冬季经常有暴风雪，而中国冷而少雪？</title>
      <link href="/2018/11/15/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8C%97%E7%BE%8E%E4%B8%9C%E9%83%A8%E5%86%AC%E5%AD%A3%E7%BB%8F%E5%B8%B8%E6%9C%89%E6%9A%B4%E9%A3%8E%E9%9B%AA%EF%BC%8C%E8%80%8C%E4%B8%AD%E5%9B%BD%E5%86%B7%E8%80%8C%E5%B0%91%E9%9B%AA%EF%BC%9F/"/>
      <url>/2018/11/15/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8C%97%E7%BE%8E%E4%B8%9C%E9%83%A8%E5%86%AC%E5%AD%A3%E7%BB%8F%E5%B8%B8%E6%9C%89%E6%9A%B4%E9%A3%8E%E9%9B%AA%EF%BC%8C%E8%80%8C%E4%B8%AD%E5%9B%BD%E5%86%B7%E8%80%8C%E5%B0%91%E9%9B%AA%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="学术预警！长文预警！多图预警！"><a href="#学术预警！长文预警！多图预警！" class="headerlink" title="学术预警！长文预警！多图预警！"></a>学术预警！长文预警！多图预警！</h3><p>北美冬季的气候处于西风带的控制之下，西风带形成了一条很长的高空急流(Jet stream)。这条急流夏天的时候在加拿大北部地区，对美国的气候不造成明显影响，而冬天的时候，急流从美国中间穿过，形成了整个冬季的冷暖气团对峙局面。高空急流形成的原因，高中地理都学过，我就不解释了。<br><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-01.jpg"></p><p>美国冬季典型的天气分布是这样的，以今年更为明显。今年冬天整个西部温暖如春，比平均温度高15~25华氏度，东部冰天雪地，比平均温度低15~25华氏度。<br><a id="more"></a><br><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-02.jpg"></p><p>这条高空急流从太平洋吹过来，在美国西海岸遇到了高山，被推到了高纬度，在华盛顿州的迎风坡造成了大量降水，又一路绕过落基山脉，来到了大平原。大平原地区没有任何山脉的阻挡，急流可以一路南下直到德克萨斯州，最南的时候可以到达佛罗里达州北部。这条急流所在的区域一般约等于0度等温线，所以冬天的时候来冷空气，佛罗里达州北部可能都会产生霜冻灾害。为什么无法再往南推进了，因为墨西哥湾的暖气团太强大了，所以佛罗里达州的南部城市比如迈阿密，从来没有经历过霜冻灾害。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-03.jpg"><p>拿答主写答案的当前时间为例，北边再冷的时候，佛罗里达州南部都是暖和的，佛罗里达三面环海，完全受到墨西哥湾暖流的控制。（图中深蓝色是0度等温线）与此同时，一场暴风雪正在酝酿中</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-04.jpg"><p>现在的降水不强大，因为没遇到什么水汽。两天后（2015/02/25）当这股降水被吹到北卡罗来纳州，遇到北大西洋暖流带来的的暖气团时，冷暖空气交汇，将会给当地造成暴雪。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-05.jpg"><p>5~8英寸约等于12到20厘米深的积雪。这对于中国而言，绝对是大暴雪了，美国人民表示见得多了，什么样的大雪没见过？今年一月底东北部的那场大雪，比这个高到不知道哪里去了。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-06.jpg"><p>好了话说回来。这条高空急流是会经常随意摆动的，当加拿大的极地冷空气势力强的时候，就被推得更南下，当墨西哥湾暖气团势力强的时候，就会被往北推。由于美国东部地形比较平坦，所以高空急流的位移幅度非常大。南则兵临佛罗里达，北则退到缅因州。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-07.jpg"><p>所以凡是高空急流扫过的地方，都会形成冷锋或暖锋，带来丰富的降水。今年冬天太冷了，所以佛罗里达州雨也下的多了，正常年份是，佛罗里达类似于国内的海南岛，因为冷空气够不着，所以没法形成降水，冬季很干燥。但是美国东海岸越往北，冬季的降水比例越大。以我居住的波士顿为例，一年四季的降水分配情况基本上是平均的，三四月份和十一十二月份降水较多，因为那个时段冷暖交替，被高空急流扫过的频率比较高。今年下雪下疯了，人行道上堆起来的雪太高了，我得跳起来才能看见马路对面……</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-08.jpg"><p>对比一下和波士顿同纬度的中国城市沈阳。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-09.jpg"><p>在气温上来对比，沈阳冬天比波士顿冷，夏天比波士顿热，气温年较差比较大，因为中国东部的气候比较大陆性，美国东部的气候受到哈得孙湾和五大湖等水体的影响比较海洋性。有趣的是，美国东部的气候在冬天比中国东部要极端的多。看看一月极端最高温度，波士顿是22度，沈阳是8度，波士顿的日极端比日平均高温要高20度，而沈阳只有13度。波士顿的极端低温也比平均低温要低20度，沈阳小一点，17度。生活在中国北方的人都知道，只要河一结冰，开春之前都是不会化的，所以可以放心的冰上走，而美国东北部的河流一般不会整个封冻，冷几天就冻上了，暖几天就化了，除非遇到今年这种特别冷的年份，不敢在冰上走。中国东部的冬天是稳定的，比如沈阳的一月，每天都是最低零下十几度，最高零下几度，但波士顿的一月，有时候最低零下十几度，有时候最低甚至有零上五六度。之所以产生这么大的变化幅度，因为高空急流的位置不同。当高空急流位于南方时，美国东北部就会受到加拿大的极地高压的影响，而高空急流暂时减弱，墨西哥湾暖流占优势时，美国东北部就会受到大西洋的低气压影响。如果这时候突然来了冷空气，就会形成暴风雪。相比，因为中国近海没有暖流，所以中国的东北部几乎一直在西伯利亚-蒙古高压的控制之下，气温稳定而冷，不会出现极端的变化。没有冷暖气团的相遇，就不会形成多少降水，这就是为什么中国北方的冬天干而冷。在中国南方，因为纬度比较低，太阳辐射强，晴天容易升温，遇到冷空气的时候一般就会形成冷锋下雨或者下雪，冬季比较湿冷。但是再怎么湿冷，由于控制中国南方的暖气团势力远远不如墨西哥湾的暖气团强，所以不会形成明显的降水，下雨也只是下小雨，不会出现像夏天一样的暴雨。在中国的东部，冬天影响天气的几乎只有一个变量，那就是有没有冷空气来。如果没有冷空气来，尤其是在黄河以南，天气会随着晴天越来越暖和，直到来一个冷空气大降温，几天的暖和又回到解放前，气温的变化一般是这样的。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-10.jpg"><p>冷空气来大降温，几天出太阳越来越暖和，直到又来一个冷空气。秋天的时候冷空气的降温更快，太阳晒暖和的速度赶不上，所以越来越冷；春天的时候太阳晒得更快，来一个冷空气倒春寒一下。而美国东部冬天的天气有两个变量影响，不仅要考虑从背面袭来的冷空气，还要考虑从南面袭来的暖空气。这两方打斗不停，所经之处下雨下雪，类似梅雨的形成原因。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-11.jpg"><p>冷空气控制下冷几天，暖空气控制下暖和几天，反复无常，毫无规律可循。所有直角的地方，基本上都得下雨下雪。暖空气来了就暖锋下雨，冷空气来了就冷锋下雪。在美国东部，尤其是东北部生活的时候你会发现一个现象，就是阴天往往比晴天暖和。因为晴天的时候基本代表高空急流在你南边，高气压控制，冷；阴天的时候基本代表高空急流在你北边，低气压控制，暖。还有一个现象就是，早上比傍晚暖和，或者第二天早上比前一天傍晚暖和。发生这种事的时候，那就是高空急流在移动，扫过你的所在地了。美国东部的冬天气温可以说是完全不受太阳辐射影响，连晒几天太阳并不会明显增温，连下几天雨也不一定会降温。气温完全取决于你的所在地当前是受到什么气团的控制，而气团被高空急流所分割开，所以美国的天气预报别的先不说，先在地图上画一条线，告诉你明天高空急流在哪里，你自己看吧，你在它北边你就冷，你在它南边你就暖和，你被它压着你就很可能下雨下雪。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-12.jpg"><p>如果是这种情况，那么就是西海岸冷，东海岸暖和，高空急流从南方绕过去，反正一般不会从美国中部山最高的地方穿过去。雷达蓝色的是下雪，绿色的是下雨，这就是一场横扫中部的暴风雪。今年为什么东北部下雪那么多，因为今年的高空急流长期保持这种形状。</p><img src="/2018/11/15/为什么北美东部冬季经常有暴风雪，而中国冷而少雪？/2018.11.16-13.jpg"><p>从西海岸北部穿过，给加拿大西海岸带来充沛降水，然后从中部杀下来，再从沿海走上去。由于盛行西风，当冷空气穿过的时候遇到五大湖的水汽，再遇到北大西洋暖流，在新英格兰地区带来百年一遇的连续的暴风雪。不仅下雪，因为对流太强烈，还会打雷，冬天北方打雷这在中国是无法想象的！最后还得吐槽一句啊，美国的天气预报信息太全面了，The Weather Channel可以显示每时每刻当前全国的气温降水风速分布图等等，中国天气网就没这功能，要看雷达图也只能看一小块局部的，更别说全国当前气温分布图了。中央气象台还得提高姿势水平啊，不要动不动一下雪了就弄个大新闻，跑得比香港记者还快。</p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>寒假计划NASA之旅</title>
      <link href="/2018/11/10/%E5%AF%92%E5%81%87%E8%AE%A1%E5%88%92NASA%E4%B9%8B%E6%97%85/"/>
      <url>/2018/11/10/%E5%AF%92%E5%81%87%E8%AE%A1%E5%88%92NASA%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<h4 id="休斯顿（Houston）"><a href="#休斯顿（Houston）" class="headerlink" title="休斯顿（Houston）"></a>休斯顿（Houston）</h4><p>德州最大城市，美国第四大城市。提及休斯顿，人们最耳熟能详的莫过于姚明曾效力的NBA火箭队了。然而，在这里，并非只有篮球爱好者才能寻迹自己的梦想，包容、多元的休斯顿也为艺术家们提供了丰富多彩的舞台。<br><img src="/2018/11/10/寒假计划NASA之旅/houston1.jpeg"><br><a id="more"></a><br>休斯顿整个城市都充满了浓厚的艺术氛围，无论是露天的音乐派对，还是即兴的街头表演，抑或是剧院和艺术中心演出的芭蕾舞和歌剧……在这里，你随时可以欣赏到高质量的艺术表演。小编本次就带大家开启休斯顿艺术之行。<br><img src="/2018/11/10/寒假计划NASA之旅/houston2.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> Diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2018/11/10/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2018/11/10/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h1><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><ul><li>列表第一项</li><li>列表第二项<a id="more"></a></li></ul><ol><li>有序列表第一项</li><li>有序列表第二项<br><a href="链接地址">标题</a><img src="/2018/11/10/Markdown语法/markdown_google.png" title="This is an example image"> <em>斜体</em><br><strong>粗体</strong><blockquote><p>引用段落<br><code>代码块</code></p></blockquote></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>开始Hexo之旅</title>
      <link href="/2018/11/09/%E5%BC%80%E5%A7%8BHexo%E4%B9%8B%E6%97%85/"/>
      <url>/2018/11/09/%E5%BC%80%E5%A7%8BHexo%E4%B9%8B%E6%97%85/</url>
      
        <content type="html"><![CDATA[<p>今天开始部署属于自己的Hexo博客。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/11/09/hello-world/"/>
      <url>/2018/11/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World,</p><p>Welcome to nature’s blog!</p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
